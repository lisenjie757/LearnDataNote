import{_ as d,Y as h,Z as n,$ as i,a1 as e,a2 as a,a0 as r,D as o}from"./framework-c2b1cf81.js";const t={},s=i("h1",{id:"_0-【方法论】如何阅读论文",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#_0-【方法论】如何阅读论文","aria-hidden":"true"},"#"),e(" 0.【方法论】如何阅读论文")],-1),c=i("h2",{id:"_1-【吴恩达】读论文的方法",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#_1-【吴恩达】读论文的方法","aria-hidden":"true"},"#"),e(" 1 【吴恩达】读论文的方法")],-1),_={href:"https://www.bilibili.com/video/BV195411Y7ms/?from=search&seid=6380620962674373232&spm_id_from=333.337.0.0&vd_source=e8390493db96c0c1ca516a431544c5d8",target:"_blank",rel:"noopener noreferrer"},u=r('<h3 id="_1-1-收集论文" tabindex="-1"><a class="header-anchor" href="#_1-1-收集论文" aria-hidden="true">#</a> 1.1 收集论文</h3><ol><li>编制论文清单（arxiv，github，blog）</li><li>快速浏览，从清单中进行挑选</li><li>决定你要关注哪些论文</li></ol><blockquote><p>5-20篇论文：对某一领域有基本的了解，可以应用一些算法<br> 50-100篇论文：对某一领域有了很好的了解</p></blockquote><h3 id="_1-2-多遍读论文" tabindex="-1"><a class="header-anchor" href="#_1-2-多遍读论文" aria-hidden="true">#</a> 1.2 多遍读论文</h3><ol><li>标题+摘要+图表</li><li>引言+结论+图表+略读剩余内容</li><li>通读整篇论文但跳过详细的数学公式和相关工作</li><li>精读整篇论文但跳过没有意义的部分</li></ol><h3 id="_1-3-读完后测试自己或与其他人讨论这些问题" tabindex="-1"><a class="header-anchor" href="#_1-3-读完后测试自己或与其他人讨论这些问题" aria-hidden="true">#</a> 1.3 读完后测试自己或与其他人讨论这些问题</h3><ol><li>作者试图实现什么？</li><li>核心要点是什么？</li><li>我能从中使用什么？</li><li>有没有其他想要关注的参考文献？</li></ol><h3 id="_1-4-去哪里跟随ml新前沿" tabindex="-1"><a class="header-anchor" href="#_1-4-去哪里跟随ml新前沿" aria-hidden="true">#</a> 1.4 去哪里跟随ML新前沿</h3><ol><li>Twitter（Kian, Andrew NG）</li><li>ML Subreddit</li><li>NIPS/ICML/ICLR</li><li>Friends</li><li>Arxiv Sanity</li></ol><h3 id="_1-5-如何深入理解数学部分" tabindex="-1"><a class="header-anchor" href="#_1-5-如何深入理解数学部分" aria-hidden="true">#</a> 1.5 如何深入理解数学部分</h3><ol><li>自己在白纸上从头开始推导一遍</li></ol><h3 id="_1-6-如何深度理解算法-代码-部分" tabindex="-1"><a class="header-anchor" href="#_1-6-如何深度理解算法-代码-部分" aria-hidden="true">#</a> 1.6 如何深度理解算法（代码）部分</h3><ol><li>从开源仓库（github）下载并跑通</li><li>学习开源代码，自己重新从头实现一遍</li></ol><h3 id="_1-7-长期持续学习的建议" tabindex="-1"><a class="header-anchor" href="#_1-7-长期持续学习的建议" aria-hidden="true">#</a> 1.7 长期持续学习的建议</h3><ol><li>稳步持续地阅读，而不是短期突击，例如<strong>每周稳定阅读2～3篇文献</strong></li></ol><hr><h2 id="_2-【吴恩达】职业生涯规划的建议" tabindex="-1"><a class="header-anchor" href="#_2-【吴恩达】职业生涯规划的建议" aria-hidden="true">#</a> 2 【吴恩达】职业生涯规划的建议</h2><h3 id="_2-1-找工作-面试官-看重什么" tabindex="-1"><a class="header-anchor" href="#_2-1-找工作-面试官-看重什么" aria-hidden="true">#</a> 2.1 找工作（面试官）看重什么</h3><ol><li>必备技能：面试题和代码能力 <ul><li>面试题例子：梯度下降/批梯度下降/随机梯度下降是什么？平均批大小太大或太小会发生什么？</li></ul></li><li>有意义的工作（证明你有应用能力）</li><li>持续学习的能力</li><li>知识的广度和深度 <ul><li>广度：对一个领域有横向的了解，例如AI的众多分支ML，DL，PGM，NLP，CV</li><li>深度：对某一子方向进行了深入的工作，例如项目经历，科研经历，<strong>实习经历</strong>，参与建设开源代码</li></ul></li></ol><h3 id="_2-2-在校时的失败模式" tabindex="-1"><a class="header-anchor" href="#_2-2-在校时的失败模式" aria-hidden="true">#</a> 2.2 在校时的失败模式</h3><ol><li>一直上课是不好的：通过上课（课程作业，论文）掌握某一领域的基础知识和基础技能后，更深入、更有针对性地参与1～2个感兴趣的项目</li><li>一进来就在参与某一领域很深入也是不好的：还没有学到很多关于编程的知识或机器学习并立即进入研究项目，这对学生来说并不有效，甚至更糟</li><li>有很大的广度，做了很多个小项目也是不好的：有10个项目但没有1～2个真正重要的项目，<strong>面试官对数量不感兴趣</strong></li><li><strong>在周末卷是没有用的，关键是做好每周的规划</strong>：关键是每周都能抽出时间持续地执行自己的学习计划（阅读论文或者贡献开源或参加一些课程），这样才能有稳定、持续的进步，例如每周阅读2～3篇论文，一年就至少有了100篇论文的积累，而不是光想着花周末的时间去卷 👍👍👍</li></ol><h3 id="_2-3-如何选择好的工作" tabindex="-1"><a class="header-anchor" href="#_2-3-如何选择好的工作" aria-hidden="true">#</a> 2.3 如何选择好的工作</h3><ol><li>选择一个有很棒的人和项目的团队：因为我们都会深深受身边人的影响，他们能教你多少，他们的努力程度，他们的眼界格局、人脉资源等都会深刻地影响我们未来的发展</li><li><strong>选择一个好的小团队，特别是好的leader，而不是公司的品牌</strong>：工作时接触最多的是团队中的10～30个人，特别是直接带你的leader，这才是选职位时应该着重关注的，而不是公司品牌大小，大公司内部方差极大，所以宁愿去小公司的精英团队，也不要去大公司的垃圾团队 👍👍👍</li><li>如果在找工作时公司方拒绝告诉你做什么项目，leader是谁，那就该好好掂量掂量这份工作的含金量了</li><li>注意公司的轮换制度：千万要小心进入公司后等公司分配的工作，最好事先就确定好团队，如果公司提前保证了将来会让你轮换到你心仪的团队，那还是可以接受的</li><li>多学习，多做重要的工作！！！</li></ol><h3 id="_2-4-【学生提问】什么是有意义的工作" tabindex="-1"><a class="header-anchor" href="#_2-4-【学生提问】什么是有意义的工作" aria-hidden="true">#</a> 2.4 【学生提问】什么是有意义的工作</h3><ol><li>大公司的AI偏同质化，都在卷最赚钱的几个赛道，例如人脸识别，语音识别，搜广推等等</li><li>但其实AI可以和许多传统行业相结合，改造传统行业</li><li>挖掘冷门的新赛道也是一件激动人心，具有挑战性的事情，也许会从中发现更好的机会</li></ol><hr><h2 id="_3-【李沐】如何读论文" tabindex="-1"><a class="header-anchor" href="#_3-【李沐】如何读论文" aria-hidden="true">#</a> 3 【李沐】如何读论文</h2>',27),b={href:"https://www.bilibili.com/video/BV1H44y1t75x/?spm_id_from=333.999.0.0&vd_source=e8390493db96c0c1ca516a431544c5d8",target:"_blank",rel:"noopener noreferrer"},f=r('<h3 id="_3-1-论文结构" tabindex="-1"><a class="header-anchor" href="#_3-1-论文结构" aria-hidden="true">#</a> 3.1 论文结构</h3><ol><li>titile</li><li>abstract</li><li>introduction</li><li>method</li><li>experiments</li><li>conclusion</li></ol><h2 id="_3-2-三步法读文献" tabindex="-1"><a class="header-anchor" href="#_3-2-三步法读文献" aria-hidden="true">#</a> 3.2 三步法读文献</h2><ul><li>第一遍：标题、摘要、结论，看看是否和自己研究的相关。看完之后可以看看方法和实验部分重要的图和表。这样可以花费十几分钟时间了解到论文是否适合你的研究方向。</li><li>第二遍：确定论文值得读之后，忽略部分细节，快速的把整个论文过一遍，需要了解重要的图和表，看懂文章针对的问题、解决方法、效果怎么样，知道每一个部分在干什么，圈出相关文献。觉得文章有看不懂的地方，可以读相关的引用文献。</li><li>第三遍：最详细的一遍，知道每一段和每一句干什么，脑补过程、换位思考、进行延伸</li></ul>',4);function x(m,p){const l=o("ExternalLinkIcon");return h(),n("div",null,[s,c,i("p",null,[e("吴恩达cs230课程中的一节，视频链接："),i("a",_,[e("link"),a(l)])]),u,i("p",null,[e("视频连接："),i("a",b,[e("link"),a(l)])]),f])}const k=d(t,[["render",x],["__file","0. 文献阅读方法论.html.vue"]]);export{k as default};
